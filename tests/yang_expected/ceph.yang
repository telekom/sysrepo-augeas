module ceph {
  namespace "aug:ceph";
  prefix aug;

  import augeas-extension {
    prefix augex;
  }

  augex:augeas-mod-name "Ceph";

  container ceph {
    list files {
      key "file";
      leaf file {
        type string;
      }
      list record {
        key "_id";
        augex:data-path "$$_id";
        leaf _id {
          type string {
            pattern "#commen((t[^\\]\n/]|[^\\]\n/t])[^\\]\n/]*|)|#comme([^\\]\n/n][^\\]\n/]*|)|#comm([^\\]\n/e][^\\]\n/]*|)|#com([^\\]\n/m][^\\]\n/]*|)|#co([^\\]\n/m][^\\]\n/]*|)|#c([^\\]\n/o][^\\]\n/]*|)|(#[^\\]\n/c]|[^\\]\n#/][^\\]\n/])[^\\]\n/]*|#|[^\\]\n#/]";
          }
        }
        list entry_re {
          key "entry_re";
          augex:data-path "$$_id/$$entry_re";
          leaf entry_re {
            type string {
              pattern "[A-Za-z0-9_.-][A-Za-z0-9 _.-]*[A-Za-z0-9_.-]";
            }
          }
          choice ch_entry_re {
            case value {
              leaf value {
                type string {
                  pattern "([^\t\n \"#;])((((([^\n#;])+)*)([^\t\n \"#;])){0,1})";
                }
                augex:data-path "$$_id/^^entry_re";
              }
            }
            case value2 {
              leaf value2 {
                mandatory true;
                type string {
                  pattern "(([^\"\n]*)(([;#])+))([^\"\n]*)";
                }
                augex:data-path "$$_id/^^entry_re";
              }
            }
          }
        }
      }
    }
  }
}