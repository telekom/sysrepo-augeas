module darkice {
  namespace "aug:darkice";
  prefix aug;

  import augeas-extension {
    prefix augex;
  }

  augex:augeas-mod-name "Darkice";

  list darkice {
    key "config-file";
    leaf config-file {
      type string;
    }
    list target {
      key "target";
      augex:data-path "target";
      leaf target {
        type string {
          pattern "[^\\]\n]+";
        }
      }
      list entry_re {
        key "entry_re";
        augex:data-path "target/$$";
        augex:value-yang-path "value";
        leaf entry_re {
          type string {
            pattern "[A-Za-z0-9][A-Za-z0-9._-]*";
          }
        }
        leaf value {
          type union {
            type string {
              pattern "([^\t\n \"#;])((((([^\n#;])+)*)([^\t\n \"#;])){0,1})";
            }
            type string {
              pattern "(([^\"\n]*)(([;#])+))([^\"\n]*)";
            }
          }
        }
      }
    }
  }
}