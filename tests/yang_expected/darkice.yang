module darkice {
  namespace "aug:darkice";
  prefix aug;

  import augeas-extension {
    prefix augex;
  }

  augex:augeas-mod-name "Darkice";

  list darkice {
    key "config-file";
    leaf config-file {
      type string;
    }
    list config-entries {
      key "_id";
      leaf _id {
        type uint64;
        description
          "Implicitly generated list key to maintain the order of the augeas data.";
      }
      container record {
        augex:data-path "target";
        augex:value-yang-path "target";
        leaf target {
          mandatory true;
          type string {
            pattern "[^\\]\n]+";
          }
        }
        list config-entries {
          key "_id";
          leaf _id {
            type uint64;
            description
              "Implicitly generated list key to maintain the order of the augeas data.";
          }
          container entry_re {
            augex:data-path "$$";
            augex:value-yang-path "value";
            leaf entry_re {
              mandatory true;
              type string {
                pattern "[A-Za-z0-9][A-Za-z0-9._-]*";
              }
            }
            leaf value {
              type union {
                type string {
                  pattern "([^\t\n \"#;])((((([^\n#;])+)*)([^\t\n \"#;])){0,1})";
                }
                type string {
                  pattern "(([^\"\n]*)(([;#])+))([^\"\n]*)";
                }
              }
            }
          }
        }
      }
    }
  }
}
