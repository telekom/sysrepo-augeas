module ethers {
  namespace "aug:ethers";
  prefix aug;

  import augeas-extension {
    prefix augex;
  }

  augex:augeas-mod-name "Ethers";

  list ethers {
    key "config-file";
    leaf config-file {
      type string;
    }
    list config-entries {
      key "_id";
      ordered-by user;
      leaf _id {
        type uint64;
        description
          "Implicitly generated list key to maintain the order of the augeas data.";
      }
      container record {
        augex:data-path "$$";
        presence "Config entry.";
        leaf ether {
          mandatory true;
          type uint64;
        }
        leaf mac {
          mandatory true;
          type string {
            pattern "(((((((((([0-9a-fA-F][0-9a-fA-F]?)(:))([0-9a-fA-F][0-9a-fA-F]?))(:))([0-9a-fA-F][0-9a-fA-F]?))(:))([0-9a-fA-F][0-9a-fA-F]?))(:))([0-9a-fA-F][0-9a-fA-F]?))(:))([0-9a-fA-F][0-9a-fA-F]?)";
          }
          augex:data-path "mac";
        }
        leaf ip {
          mandatory true;
          type string {
            pattern "[^# \n\t]+";
          }
          augex:data-path "ip";
        }
      }
    }
  }
}
